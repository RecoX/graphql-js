scalar DateTime

type Query {
    info: String!

    feed(
        filter: String,
        skip: Int,
        first: Int,
        orderBy: LinkOrderByInput
    ): Feed!

    users(
        name: String
        skip: Int
        first: Int
        orderBy: LinkOrderByInput
    ): [User!]!

    user(
        id: ID!
    ): User!

    image(
        id: ID!
    ): Image!

    imageList(
        filter: String,
        skip: Int,
        first: Int,
        orderBy: ImageOrderByInput
    ): ImageList!
}

enum LinkOrderByInput {
    description_ASC
    description_DESC
    url_ASC
    url_DESC
    createdAt_ASC
    createdAt_DESC
    name_ASC
    name_DESC
}

enum ImageOrderByInput {
    description_ASC
    description_DESC
    url_ASC
    url_DESC
    uploadedBy_ASC
    uploadedBy_DESC
    name_ASC
    name_DESC
    createdAt_ASC
    createdAt_DESC
}

#// #########TIPOS  DE OBJETOS (ObjType)##########

enum objTypes {
    comida
    armas
    armaduras
    arboles
    dinero
    puertas
    objetos_contenedores
    carteles
    llaves
    foros
    pociones
    libros
    bebida
    lena
    fogata
    escudos
    cascos
    anillos
    telep
    muebles
    joyas
    yacimiento
    metales
    pergaminos
    aura
    instrumentos_musicales
    yunque
    fragua
    gemas
    flores
    barcos
    flechas
    botellas_vacias
    botellas_llenas
    manchas
}

enum potionType {
    agilidad
    fuerza
    salud
    mana
    veneno
}

type Feed {
    links: [Link!]!
    count: Int!
}

type Mutation {
    post(url: String!, description: String!): Link!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote!
    uploadImage(origin: String, description: String!, name: String!, url: String!): Image!
}

type Subscription {
    newLink: Link
    newVote: Vote
}

type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
    images: [Image!]!
}

type Users {
    users: [User!]!
}

type Link {
    id: ID!
    createdAt: DateTime!
    description: String!
    url: String!
    postedBy: User
    votes: [Vote!]!
}

type Image {
    id: ID!
    name: String!
    createdAt: DateTime!
    description: String!
    uploadedBy: User
    origin: String
    votes: [VoteImage!]!
    url: String
    #  indexingData: IndexingData!
}

type ImageList {
    images: [Image!]!
    count: Int!
}

#type IndexingData {
#    name: String,
#    #    objType: objTypes,
#    #    TipoPocion: potionType,
#    razaEnanaAnim: Int,
#    NumRopaje: Int,
#    anim: Int,
#    agarrable: Boolean,
#    maxDef: String,
#    minDef: String,
#    minHit: String,
#    maxHit: String,
#    staffPower: String,
#    staffDamageBonus: String,
#    valor: Int,
#    crucial: Boolean,
#    cp1: String,
#    cp2: String,
#    cp3: String,
#    cp4: String,
#    cp5: String,
#    cp6: String,
#    cp7: String,
#    lingH: Int,
#    lingP: Int,
#    lingO: Int,
#    skHerreria: Int,
#    upgrade: Int
#    abierta: Boolean,
#    llave: Boolean,
#    indexAbierta: Int,
#    indexCerrada: Int,
#    indexCerradaLlave: Int,
#    cantItems: Int,
#    nroItems: Int,
#    texto: String,
#    Radio: Int,
#    VGrande: Int,
#}

type VoteImage {
    id: ID!
    image: Image!
    user: User!
}

type Vote {
    id: ID!
    link: Link!
    user: User!
}
